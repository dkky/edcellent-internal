h1 Editing Lesson

= bootstrap_form_for @period, remote: true do |f|
  = f.text_field :start_time, label: 'What time does it start?', class: 'text-input',id: 'date-start',data: { index: "7"}
  p    
  = f.text_field :end_time, label: 'What time does it end?', class: 'text-input',id: 'date-end',data: { index: "7"}
  p   
    b Select Subject
  = f.select :subject, ["EAL","Accounting","Science"], { hide_label: true,prompt: 'Select Subject'}, { id: 'individual_select'}  
  p  
  = f.text_field :description, label: 'Description (Optional)', class: 'text-input'
  p  
  = f.text_field :note, label: 'Learning Outcome',rows: '8',class: 'text-input wysihtml5'
  p
    b Your students: 
    - @period.group.users.each do |user|
      = user.name
  p
    b Change? if no changes, please leave this alone.
  = select_tag "class_type", options_for_select(["yes","no"]), prompt: "Change students"
  br
  br
  #power-search-student-div
    p
      b Select Students
    = select_tag "groups", nil, id: 'power-search-random-group', class: "select-example-3", multiple: true
    br
  p   
    b Select Tutor
  = f.select :tutor_id, User.tutor.map {|i| [i.name,i.id]}, { hide_label: true,prompt: 'Select Tutor'}, { id: 'individual_select'}    
  p
    b Is the session completed?
  = f.select :period_status, [{"Incomplete":1}, {"Done": 0}].map {|i| [i.keys[0], i.values[0]]}, { hide_label: true, prompt: 'Status'},{class: 'test',data: { index: "3"}}
  = f.submit 'Done'



// javascript:

//   $(document).ready(function(){
//     $('#class_type').on('change', function() {
//       if (this.value == "yes")
//       {
//         $("#power-search-student-div").toggle();
//       } else {
//         $("#power-search-student-div").hide();
//       }
//     });
//   });


//   $(document).ready(function(){
//     $(".select-example-2").select2({
//       maximumSelectionLength: 1,
//       placeholder: "Select the group",
//       createTag: function (params) {
//         return {
//           id: params.term,
//           text: params.term,
//           newOption: true
//         }
//       },
//       ajax: {
//         url: "/admin/groups",
//         dataType: 'json',
//         delay: 250,
//         data: function (params) {
//           return {
//             q: params.term, // search term
//             page: params.page
//           };
//         },
//         processResults: function (data, params) {
//           return { results: $.map( data, function(client, i) {
//               var displayResult = client.name 
//                   return { id: client.id, text: displayResult}
//               } ) };          
//         }
//       },
//     });
//   });

//   $(document).ready(function(){
//     $(".select-example-3").select2({
//       maximumSelectionLength: 10,
//       placeholder: "Select Student",
//       createTag: function (params) {
//         return {
//           id: params.term,
//           text: params.term,
//           newOption: false
//         }
//       },
//       ajax: {
//         url: "/admin/users/select2_list_student",
//         dataType: 'json',
//         delay: 250,
//         data: function (params) {
//           return {
//             q: params.term, // search term
//             page: params.page
//           };
//         },
//         processResults: function (data, params) {
//           return { results: $.map( data, function(client, i) {
//               var displayResult = client.first_name + ' ' + client.last_name 
//                   return { id: client.id, text: displayResult}
//               } ) };          
//         }
//       },
//     });
//   });

//   $(document).ready(function(){
//     $('#date-end').bootstrapMaterialDatePicker
//     ({
//       weekStart: 0, format: 'YYYY-MM-DD HH:mm'
//     });
//     $('#date-start').bootstrapMaterialDatePicker
//     ({
//       weekStart: 0, format: 'YYYY-MM-DD HH:mm', shortTime : true
//     }).on('change', function(e, date)
//     {
//       $('#date-end').bootstrapMaterialDatePicker('setMinDate', date);
//     });

//     $('#min-date').bootstrapMaterialDatePicker({ format : 'YYYY-MM-DD HH:mm', minDate : new Date() });

//     $.material.init()
//   });

