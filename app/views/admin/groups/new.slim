h2 Create a group

= bootstrap_form_for @group, url: admin_groups_path(@group) do |f|
  .col-md-6
    #power-search-random-group-div
      p
        b Select Students
      = select_tag "groups", nil, id: 'power-search-random-group', class: "select-example-3", multiple: true
      br
    = f.submit 'Done'



javascript:

  
  $(document).ready(function(){
      $(".select-example-3").select2({
        maximumSelectionLength: 10,
        placeholder: "Select Student",
        createTag: function (params) {
          return {
            id: params.term,
            text: params.term,
            newOption: false
          }
        },
        ajax: {
          url: "/admin/users/select2_list_student.json",
          dataType: 'json',
          delay: 250,
          data: function (term) {
            return {
                term: term
            };
          },
          processResults: function (data) {
            var results = [];
            $.each(data, function(index, item){
              var name = item.english_name + ' ' + item.last_name + ' (' + item.school + ')'
              results.push({
                id: item.id,
                text: name
              });
            });
            return {
                results: results
            };
          }
          // processResults: function (data, params) {
          //   // return { results: $.map( data, function(client, i) {
          //   //     var displayResult = client.first_name + ' ' + client.last_name 
          //   //         return { id: client.id, text: displayResult}
          //   //     } ) }; 
          //   console.log(data.matches)
          //   return { 
          //     // Select2 requires an id, so we need to map the results and add an ID
          //     // You could instead include an id in the tsv you add to soulheart ;)
          //     results: data.matches.map(function(item) {
          //       //var textToDisplay = item.category + ": " + item.text
          //       return {
          //         id: item.id,
          //         text: item.first_name
          //       };
          //     }),
          //     pagination: {
          //       // If there are 10 matches, there's at least another page
          //       more: data.matches.length === 10
          //     }
          //   };         
          // }
      },
    });
  });
